services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: workload_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    restart: always
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  web:
    build: .
    environment:
      - PYTHONPATH=/app/src
      - DOCKER_ENV=true
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        while ! nc -z db 5432; do sleep 1; done &&
        echo 'Database available!' &&
        python src/workload_migrator/manage.py migrate &&
        python src/workload_migrator/manage.py collectstatic --no-input &&
        gunicorn --chdir src/workload_migrator workload_migrator.wsgi:application --bind 0.0.0.0:8000
      "
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env.docker
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  worker:
    build: .
    environment:
      - PYTHONPATH=/app/src
      - DOCKER_ENV=true
    command: >
      sh -c "
        echo 'Waiting for Redis...' &&
        while ! nc -z redis 6379; do sleep 1; done &&
        echo 'Redis available!' &&
        cd /app/src/workload_migrator &&
        celery -A workload_migrator worker --loglevel=info
      "
    volumes:
      - .:/app
    env_file:
      - .env.docker
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  db_data: